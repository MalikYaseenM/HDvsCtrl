import pandas as pd
import os

process_df = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")

top = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats.txt")
top_shuffle = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats_shuffle.txt")
top_shuffle_equal = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats_shuffle_equal.txt")
top_equal = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats_equal.txt")

random = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats.txt")
random_shuffle = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats_shuffle.txt")
random_shuffle_equal = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats_shuffle_equal.txt")
random_equal = os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats_equal.txt")

rule all:
  input:
    process_df,
    top,
    top_shuffle,
    top_shuffle_equal,
    top_equal,
    random,
    random_shuffle,
    random_shuffle_equal,
    random_equal

rule process_df:
  input: "process_df.py"
  output: os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
  shell:
   "python {input}"

rule top:
  input: 
    py = "rf_sympBA9.py",
    counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
  output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats.txt")
  shell:
    "python {input.py} {input.counts} 250 0.75 20000 1000 top ns ne"

rule top_shuffle:
  input:
    py = "rf_sympBA9.py",
    counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
  output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats_shuffle.txt")
  shell:
    "python {input.py} {input.counts} 250 0.75 20000 1000 top shuffle ne"

rule top_shuffle_equal:
  input:
    py = "rf_sympBA9.py",
    counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
  output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats_shuffle_equal.txt")
  shell:
    "python {input.py} {input.counts} 250 0.75 20000 1000 top shuffle equal"

rule top_equal:
  input:
    py = "rf_sympBA9.py",
    counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
  output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_top_250_genes_20000_trees_1000_repeats_equal.txt") 
  shell:
    "python {input.py} {input.counts} 250 0.75 20000 1000 top ns equal"

rule random:
  input:
    py = "rf_sympBA9.py",
    counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
  output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats.txt")
  shell:
    "python {input.py} {input.counts} 250 0.75 20000 1000 random ns ne"

rule random_shuffle:
   input:
     py = "rf_sympBA9.py",
     counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
   output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats_shuffle.txt")
   shell:
     "python {input.py} {input.counts} 250 0.75 20000 1000 random shuffle ne"

rule random_shuffle_equal:
    input:
      py = "rf_sympBA9.py",
      counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
    output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats_shuffle_equal.txt")
    shell:
      "python {input.py} {input.counts} 250 0.75 20000 1000 random shuffle equal"

rule random_equal:
    input:
      py = "rf_sympBA9.py",
      counts = os.path.abspath("../../samples/Analysis_Results/sympBA9_counts.csv")
    output: os.path.abspath("../../samples/Analysis_Results/Random_forest_results/rf_random_250_genes_20000_trees_1000_repeats_equal.txt")
    shell:
      "python {input.py} {input.counts} 250 0.75 20000 1000 random ns equal"
