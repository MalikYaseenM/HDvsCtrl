* GTEX Analysis
** TODO [0/1]
- [ ] Compare DE gene list between Asympt and the GTEx

** Information about the Data
- Genotype-Tissue Expression Project [[https://www.gtexportal.org/home/documentationPage][GTEx Website]]
- Resource to study human gene expression
- Paper [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4010069/][GTEx project paper]]
-  [[https://sites.google.com/broadinstitute.org/gtex-faqs/home][non-strand specific polyA selection]]
*Goal of experiment* 
-  Trying to create a baseline 'normal' BA9 and CAU
[[file:Brodmann_area_9.jpg][Brodmann area 9]]

[[file:CAU.png][Caudate nucleus]] 

*Donor Inclusion/Exclusion Criteria are as follows:*
1. 21 ≤ Age (years) ≤ 70
2. 18.5 < BMI < 35
3. Time between death and tissue collection less than 24 hours
4. No whole blood transfusion within 48 hours prior to death
5. No metastatic cancer
6. No chemotherapy or radiation therapy within the 2 years prior to death
7. Generally unselected for presence or absence of diseases or disorders, except for potentially communicable dis\
eases that disqualify someone to donate organs or tissues would also be disqualifying for GTEx.

*Library prep methods*
A6) Was the RNA-seq protocol for GTEx strand specific?

No. RNA-seq was performed using the Illumina TruSeq library construction protocol. 
This is a non-strand specific polyA+ selected library.  
For more details, please visit our documentation page: https://gtexportal.org/home/documentationPage


*We have a substational amount of covariate data*
[[file:phs000424.v7.pht002742.v7.p2.c1.GTEx_Subject_Phenotypes.GRU.txt][Phenotypic Data]]

#+BEGIN_SRC python :results output
import os
from xml.etree import ElementTree
import textwrap
full_file= os.path.abspath(
'phs000424.v7.pht002742.v7.GTEx_Subject_Phenotypes.data_dict.xml')

dom = ElementTree.parse(full_file)

description = dom.findall('description')
for d in description:
    long_string = d.text
for i in textwrap.wrap(long_string):
    print(i)



#+END_SRC
#+RESULTS:
#+begin_example
This subject phenotype data table includes demographic information
(n=9 variables; gender, age, race, ethnicty, height, weight, and bmi),
study eligibiliy, general medical history (n=21 variables),
autoimmune, degenerative, neurological (n=11 variables), evidence of
HIV (n=9 variables), blood donation (n=2 variables), information (n=41
variables), potential exposure: physical contact (n=3 variables),
potential exposure: sexual activity (n=4 variables), history at time
of death (n=13 variables), tissue transplant (n=2 variables), medical
history source, death circumstances (n=26 variables), tissue recovery
(n=13 variables), serology results (n=14 variables), organ donor or
post-mortem cohort, and total ischemic time for a donor.
#+end_example


#+BEGIN_SRC python :results output
import os
from xml.etree import ElementTree as ET
import textwrap
full_file= os.path.abspath(
'../reference/GTEX_Sample_Data/phs000424.v7.pht002743.v7.GTEx_Sample_Attributes.data_dict.xml')

dom = ET.parse(full_file)
description = dom.findall('description')
for d in description:
    long_string = d.text
for i in textwrap.wrap(long_string):
    print(i)



#+end_SRC

#+RESULTS:
: This sample attributes data table includes sample batch information
: (n=6 variables; nucleic acid isolation batch, genotype and expression
: batch), autolysis score, sample collection and storage (n=6 variables;
: also RIN number and analyte type), coded site or center, tissue
: location and type (n=7 variables), and sample ischemic, procurement,
: fixative time (n=3 variables), samples included in GTEx analysis
: freeze, sample quality (n=5 variables), and genotype qc information
: (n=41 variables).


** QC
*NOTE* In the trouble samples.txt there are 106 sample names, but not all samples include R1 and R2

*Analyses*

- [X] FASTQC
- [X] Trimmomatic
- [X] Salmon
- [X] STAR
- [X] Multiqc [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/pre_filtered_multiqc_report.html][Pre_filtered_multiqc]], [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/Per_Base_Sequence.png][Per_Base_Sequence_Heat]], [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/analysis/reference/GTEX_info.tsv][GTEX_info.tsv]], [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/filtered_multiqc_report.html][Filtered_multiqc]]

#+BEGIN_SRC shell
shotwell Per_Base_Sequence.png
#+END_SRC
- Filtered out samples due to the heatmap and being qualitatively different from the rest
- N7MT_BA9, WL46_BA9, X4EP were also filtered out which contained > 2% over represented sequences.
- T5JC_BA9, T6MN_BA9, XLM4 were filtered out because they were different lengths (250 instead of 76) 

*After filtering*
- After running it through our pipeline we went from 248 pairs to 192.
  - 51 females
  - 141 males
  - mean age = 59.4
  - median age = 60.5
  - 90 BA9 samples
  - 102 CAU samples

** Differential Gene Expression
*** Previous Anaylsis 10/23/17
 [[file:Snakefile][Snakefile]]

 - [X] Filtered rows means less than 10 [[file:filter.py][filter.py]] [[file:GTEX_salmon_filter.csv][GTEX_salmon_filter.tsv]]
 - [X] Deseq normalization  [[file:GTEX_salmon_norm.csv][GTEX_salmon_norm.csv]]
 - [X] Create the design Meta data file [[file:sample_info_design.csv][sample_info_design.csv]]
 - [X] Firth Logistic Regression**  [[file:OLD_GTEX_salmon_firth.tsv][GTEX_salmon_firth.tsv]], [[file:counts_beta_plot.png][Counts_Beta.png]]
 - [X] David [[file:David/GOTERM_BP_DIRECT.tsv][GO_TERM_BP]], [[file:David/GOTERM_CC_DIRECT.tsv][GO_TERM_CC]], [[file:David/GOTERM_MF_FAT.tsv][GO_TERM_MF]]

 *Filtering*
 - After Filtering count data for rows less than mean of 10
   - Went from 58k rows down to 21,654
 - Normalized using Deseq2

 *Firth*

 *Counts Beta*
 - range between .44 and -.36
   - median of -0.000365
 #+BEGIN_SRC sh
 shotwell counts_beta_plot.png
 #+END_SRC

 #+RESULTS:

 *Padjusted*
 - 16,021 < .05
   - ranging .049 - 3.2e-15
   - median 3.08e-05
   - 21654/16,0021 74% 

 #+RESULTS:


 #+BEGIN_SRC python :results output table
 import pandas as pd
 import os
 import textwrap
 GO_BP = os.path.abspath('David/GOTERM_BP_DIRECT.tsv')

 GO_BP_DF = pd.read_csv(GO_BP, sep='\t')
 head = GO_BP_DF['GOTERM_BP_DIRECT'].values.tolist()
 frac = head[0:20]
 for idx, item in enumerate(frac):
     for j in textwrap.wrap(frac[idx]):
         print(j)
     print('\n')





 #+END_SRC

*** Follow Up Analysis 
 - [X] Rerun firth with more covariate data [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/GTEX_salmon_firth.tsv][GTEX_firth.tsv]]
 - [X] Run the stats module on the normalized counts [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/GTEX_salmon_firth.html][GTEX_salmon_firth.html]]
 - [X] Check for gender bias between brain regions 
 - [X] Sex stratificaiton female & male BA9 vs CAU [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/female_sample_design_info.csv][fem_samp_info]], [[file:/ssh:crespodi@scc4.bu.edu:/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/male_sample_design_info.csv][male_samp_info]] [[file:sex_stratification.py][sex_stratification.py]],
 [[file:stratification_anaylsis.py][stratification_analysis.py]] 
 - [X] PCA on the normalized overall matrix
 - [X] Compare old results to new
 - [X] Recount2 get a sense of how similar are data is

 *Sample Statistics*
 |        | BA9 | CAU | Median Age | range |
 |--------+-----+-----+------------+-------|
 | Male   |  65 |  76 |         61 | 23-70 |
 | Female |  25 |  26 |         60 | 44-68 |
 | Total  |  90 | 102 |       60.5 |       |

 *Stratificaiton Results*
 | Category        | Differentially Expressed Genes |
 |-----------------+--------------------------------|
 | No Covariates   | 16,021                         |
 | With Covariates | 15,933 (Age + Sex)             |
 | Only Female     | 9981                           |
 | Only Male       | 15,165                         |

*** Recount Data

 - [X] Download the data from recount
 - [X] Compare DE of recount data to our data
 - [X] Log2 fold change

Padj > 0.05
 | Category                | Differentially Expressed Genes |
 |-------------------------+--------------------------------|
 | No Covariates(FL)       | 16,021                         |
 | With Covariates(FL)     | 15,933 (Age + Sex)             |
 | GTEX (deseq)            | 28                             |
 | Recount (deseq)         | 314                            |
 | Only Female(FL)         | 9981                           |
 | Only Male(FL)           | 15,165                         |

*** Recount Project description
 recount2 is an online resource consisting of RNA-seq gene and exon counts 
 as well as coverage bigWig files for 2041 different studies. 
 It is the second generation of the ReCount project. 
 The raw sequencing data were processed with Rail-RNA as described in 
 the recount2 paper and at Nellore et al, Genome Biology, 
 2016 which created the coverage bigWig files. 
 For ease of statistical analysis, for each study we created count tables at the 
 gene and exon levels and extracted phenotype data, which we provide in their 
 raw formats as well as in RangedSummarizedExperiment R objects 
 (described in the SummarizedExperiment Bioconductor package). 
 We also computed the mean coverage per study and provide it in a bigWig file, 
 which can be used with the derfinder Bioconductor package to 
 perform annotation-agnostic differential expression analysis 
 at the expressed regions-level as described at Collado-Torres et al, 
 Genome Research, 2017. The count tables, RangedSummarizeExperiment objects, 
 phenotype tables, sample bigWigs, mean bigWigs, and file information tables are 
 ready to use and freely available here. We also created the recount Bioconductor 
 package which allows you to search and download the data for a specific study . 
 By taking care of several preprocessing steps and combining many datasets into one 
 easily-accessible website, we make finding and analyzing RNA-seq data considerably more 
 straightforward. 

*** Recount and Rail rna

 [[https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-1118-6][recount paper]]
 [[https://academic.oup.com/bioinformatics/article/doi/10.1093/bioinformatics/btw575/2525684][Rail-Rna]]
 *Rail-RNA*
 - Cloud-enabled spliced aligner that analyzes many samples at once
 - Follows MapReduce programming model

 A MapReduce program is composed of a Map() procedure (method) that performs 
 filtering and sorting (such as sorting students by first name into queues, 
 one queue for each name) and a Reduce() method that performs a summary operation 
 (such as counting the number of students in each queue, yielding name frequencies). 
 The "MapReduce System" (also called "infrastructure" or "framework") orchestrates 
 the processing by marshalling the distributed servers, running the various tasks 
 in parallel, managing all communications and data transfers between the various 
 parts of the system, and providing for redundancy and fault tolerance.

 *Goals*
 - anaylze many samples at once to
   - borrow strength for accurate detection of exon-exon junctions even at low coverage
   - avoid effort spent aligning redundant sequences across samples
   - compute cross-sample results including normalized mean coverages of each base of the genome across samples
 *Benefits*
 - Eliminate redundant work across samples
 - More accurate than annotation-assisted aligners
   - accurage w/out gene annotation, avoiding annotation bias resulting from incomplete or incorrect transcript annotations
 - Rail-RNA gets more efficient as more samples are analyzed in part because it identifies and eliminates redundant
 alignment work within and across samples

 *Outputs*
 - alignment in SAM/BAM format
 - bigWigs encoding normalized mean and median coverages at each base across samples analyzed
 - exon-exon splice junctions and indels (features) in columnar formats that juxtapose coverages in samples in which
 the given feature is found

 *Process*
 Alignment
 - Bowtie 2

 *Method*
 - simulated 112 RNA-seq samples with 40 million 76-bp paired end reads using Flux Simulator
   - used FPKM expression levels from the set of 112 randomly selected paired-end samples
 *Accuracy*
 1. overlap accuracy, 
 measuring precision and recall of overlap events. Each event is an
 instance where the primary alignment of a read overlaps an exon-exon
 junction; 
 2. exon-exon junction accuracy, 
 measuring precision of exon-
 exon junctions called by a given aligner and recall of the set of exon-exon
 junctions within a sample or across samples. We also compute F-score,
 the harmonic mean of precision and recall. Section S.11 formally defines
 these measures as well as a measure of overall mapping accuracy.

 *After Rail-RNA)
 We analyzed bigWig outputs using the derfinder Bioconductor
 package (Collado-Torres et al., 2015) based on algorithms described in
 (Frazee et al., 2014; Jaffe et al., 2014). derfinder identified conti-
 guous genomic stretches where average coverage across all samples was

 *Rail-RNA steps*
 A worker refers to computer process under Rail-RNA's Control
 Many workers operates simultaneously across several computers

 Preprocess-Reads
 - Takes FastQ files (paired or single end)

 Align-Reads
 - Duplicate reads are grouped together so that a worker operates on all reads having the same nucleotide sequence
 - Two passes of alignment are performed using Bowtie 2.
   - 1st pass, each unique read is aligned to the genome
     - if there is exactly one highest-scoring alignment and it has no gaps, mismatches
       or soft-clipped bases, allreads with the same nucleotide sequence are assigned that alignment.
   - 2nd pass, If the alignment is not perfect or if there is more than one highest-scoring alignment,
     - all reads with the same nucleotide sequence are run through a second
       pass of Bowtie 2 to ensure that quality sequences are taken into consideration
       when scoring alignments or ties are broken. Some read sequences
       with imperfect alignments are divided into short overlapping substrings
       called readlets. These sequences are searched for whether they overlap
       exon-exon junctions in a later step.

 Align-Readlets
 - Groups duplicate readlets so a worker operates on all readlets across samples with same sequence
 - Each readlet is aligned using bowtie once.

 Filter exon-exon junctions
 -Rail-RNA borrows strength across samples to remove junctions not meeting one of these criteria:
 1. The exon-exon junction appears in at least K% of samples.
 2. The exon-exon junction is covered by at least J reads in at least one
 sample. 
 enumerate intron configurations step
 - Rail-RNA enumerates the ways that multiple exon-exon
 junctions detected on the same strand in the same sample can be overlapped
 by a read segment s( readlet_config_size ) spanning readlet_config_size
 bases;

 Retrieve and index isofrags step
 - step, each worker operates on an
 intron configuration at a time, concatenating the exonic bases surroun-
 ding its introns to form a transcript fragment of size readlet_config_size.
 This is termed an “isofrag.”
 - Subsequently, a single worker uses
 bowtie2-build to build a single Bowtie 2 index for all enumerated
 isofrags. Later, Bowtie 2 uses the index to realign reads in the next step.

 finalize combinations of exon-exon junctions overlapped by
 read sequences

 - step, read sequences that failed to align perfectly in the
 first step are aligned to isofrags using Bowtie 2 in local mode with
 a minimum score threshold of 48 by default. Local alignment is used
 since indexed sequences are of length readlet_config_size, shorter than
 the read length.
 - From these alignments Rail-RNA derives a list of exon-exon junctions the read
 could possibly overlap.

 realign reads step
 - read sequences that failed to align perfectly in
 the first step are realigned to a set S of transcript fragments. Each transcript
 fragment in S overlaps a different combination of exon-exon junctions
 found in the previous step. All the exon-exon junction combinations found
 for the read’s nucleotide sequence are spanned by a subset of S . Moreover,
 several distinct read sequences may overlap transcript fragments in S . A
 given worker performs realignment as follows.
 1. Transcript fragments in S are recorded and indexed with
 bowtie2-build.
 2. Reads are realigned to the new index using Bowtie 2 in --local
 mode. These are reads that are in the same index bin referenced in

 collect and compare read alginments
 - Bowtie 2 alignments
 of reads accumulated in previous steps, except for those that aligned perfe-
 ctly in the “align reads to genome” step, are collected here and partitioned
 by read name. A worker operates on all alignments of a given read at once.
 For each read, if there is exactly one highest-scoring alignment for that
 read, it is chosen as the primary alignment. Otherwise, Rail-RNA attempts
 to break the tie by selecting the alignment spanning the fewest exon-exon
 junctions. If there is still a tie, it is broken by a random draw weighted by
 the number of uniquely aligned reads supporting each exon-exon junction

 Write BAMS
 - By default all primary alignments, including
 perfect alignments from the “align reads” step, are output.

*** Null Analysis Results
 - [X] Create 1000 sample info files [[file:shuffle.py][shuffle.py]]
 - [X] Create a rule to perform 1000 firth logistic regressions [[file:Snakefile][rule create_GTEX_null_test:]]
 - [X] Boxplot of the distribtion of counts per gene per sample [[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/Null_test.ipynb][Null Test ipynb]]

The idea for the null test was to break the association between brain region. 

[[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/Null_testTop25Genes.png][Null Test Results]]
Null Test results showed the distribution of genes per sample centered around zero indicating
a normal distribution as we would expect

- Adam had seen a lot of good results using batchqc and combat from Filisia's work
- Decided to apply the same pipeline to our samples

*** Batch correction
- [X] Apply BatchQC to our dataset and observe any batch effects
- [X] Apply ComBat to our data [[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/batchqc.R][batchqc.R]]
- [X] Graph counts no_cov vs cov [[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/counts_beta.R][counts beta Rscript]]

192 samples over 69 batches

Significant batches
pca1(9)
| Batches        |  Estimate | Std. Error | t-value | pr(>abs(t)) |
| fbatchBP-43229 | -131.2710 |    62.6269 |  -2.096 | 0.03812*    |
| fbatchBP-43316 | -170.5490 |    79.2174 |  -2.153 | 0.03328*    |
| fbatchBP-43747 | -137.4645 |    62.6269 |  -2.195 | 0.03004*    |
| fbatchBP-43965 | -133.2330 |    64.6807 |  -2.060 | 0.04152*    |
| fbatchBP-44999 | -135.6784 |    62.6269 |  -2.166 | 0.03220*    |
| fbatchBP-45522 | -133.1515 |    64.6807 |  -2.059 | 0.04164*    |
| fbatchBP-46363 | -182.5820 |    68.6043 |  -2.661 | 0.00882**   |
| fbatchBP-46364 | -161.5114 |    64.6807 |  -2.497 | 0.01384*    |
| fbatchBP-47085 | -178.6711 |    68.6043 |  -2.604 | 0.01034*    |

pca2(4)
| Batches        | Estimate | Std. Error | t-value | pr(>abs(t)) |
| fbatchBP-43316 | 145.3667 |    62.0159 |   2.344 | 0.0207*     |
| fbatchBP-43316 | 145.3667 |    62.0159 |   2.344 | 0.0207*     |
| fbatchBP-43982 | 102.3523 |    50.6358 |   2.021 | 0.0454*     |
| fbatchBP-48227 | 144.0265 |    62.0159 |   2.322 | 0.0219*     | 
  
pca3(3)
| Batches        |  Estimate | Std. Error | t-value | pr(>abs(t)) |
| fbatchBP-35959 |  -95.5122 |    42.1711 |  -2.265 | 0.0253*     |
| fbatchBP-43316 | -108.0433 |    48.6950 |  -2.219 | 0.0283*     |
| fbatchBP-48370 |  -81.7977 |    38.4968 |  -2.125 | 0.0356*     |
  
pca5(4)
| Batches        | Estimate | Std. Error | t-value | pr(>abs(t)) |
| fbatchBP-41239 | 77.21791 |   37.07873 |   2.083 | 0.0394*     |
| fbatchBP-41252 | 67.05696 |   33.84810 |   1.981 | 0.0498*     |
| fbatchBP-42768 | 73.51533 |   37.07873 |   1.983 | 0.0496*     |
| fbatchBP-45053 | 71.45609 |   33.84810 |   2.111 | 0.0368*     |

[[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/pcab4combat.png][PCA Before Combat]]

[[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/pcaaftercombat.png][PCA After Combat]]

 *Stratificaiton Results*
 | Category        | Differentially Expressed Genes |
 |-----------------+--------------------------------|
 | No Covariates   | 16,021                         |
 | With Covariates | 15,933 (Age + Sex)             |
 | Only Female     | 9981                           |
 | Only Male       | 15,165                         |
 | Batch Corrected | 13,992                         |
 | Batch Corrected | 13,863 (Age + Sex)             |

[[file:~/Huntington/presymptomatic_hd_mrnaseq/samples/GTEx/results/covariatevnocovariate.png][covariate v no covariate]]
*** Notes to myself
 - Female 2 male 1
 - Library prep method poly-A
 - Sex stratification, female ba9 to female cau, male ba9 to male cau.
 - pull out the female brains ba9 vs caudate and then male brains
 - Look at the brain regions by sex to see if there is a bias
 - PCA on the overall matrix normalized 
 - How samples are paired together (IE BA9 sample has a CAP sample)
 - Estimate size factors Rcode


<variable id="phv00169245.v7">
  <name>SMNABTCH</name>
    <description>Nucleic Acid Isolation Batch ID</description>
      <type>string</type>
        <comment>Generated at LDACC Batch when DNA/RNA was isolated and extracted from a sample. </comment>
</variable>

<variable id="phv00169246.v7">
  <name>SMNABTCHT</name>
    <description>Type of nucleic acid isolation batch</description>
      <type>string</type>
          <comment>Generated at LDACC The process by which DNA/RNA was isolated. </comment>
</variable>

<variable id="phv00169247.v7">
  <name>SMNABTCHD</name>
    <description>Date of nucleic acid isolation batch</description>
      <type>string</type>
        <comment>Generated at LDACC The date on which DNA/RNA was isolated. </comment>
</variable>

<variable id="phv00169248.v7">
  <name>SMGEBTCH</name>
    <description>Genotype or Expression Batch ID</description>
      <type>string</type>
        <comment>Generated at LDACC Batch when DNA/RNA from a sample was analyzed. </comment>
</variable>

<variable id="phv00169249.v7">
  <name>SMGEBTCHD</name>
    <description>Date of genotype or expression batch</description>
      <type>string</type>
        <comment>Generated at The data on which DNA/RNA was analyzed. </comment>
</variable>

<variable id="phv00169250.v7">
  <name>SMGEBTCHT</name>
    <description>Type of genotype or expression batch</description>
      <type>string</type>
        <comment>Generated at LDACC The technology used to analyze DNA/RNA. </comment>
</variable>





** Hub meeting notes
10/20/17
.29 each count in the sample is divided by. 2.05 multip then twice the depth than the average
deseq2 normalization. across every gene compute geomertric mean. mult all samples together
and take the nth root.
- +change integers for sex to ['M', 'F']+
all the counts in the matrix
sequencing the brains of individuals between two population, 


10/27/17
readcount sequencing counts
- project download lots of data from different databases and process
- count for each sample and differential expression
detk-stats summary counts matrix (normalized or raw)

11/2
3 feet by 4 feet for the presentation
matplot lib can write out to svg

11/14
saveRdata()
loadRdata()
Profile Likelihood pl
if firth is doing what we want it to do then if we do a simple mean of
counts over the other it should be dramatically different

rerun deseq2 
deseq2 has a built in outlier scheme by default. Uses cooks distance
Outliers are set to NaN
** Lab meeting
11/16/17
- simulate a null outcome 1000 times. Permute the labels ba9 and CAU
- filter the recount data and use only the same genes
- contact Song Hoan to detect GTEX data
- Ranking you are doing a nonparametric will cokson test
- BA9 vs Caudate
- overfitting vs underfitting

 11/09/17



***** Notes about the Poster
 - sketch out posters
 - abstract
 - background
 - ideally 22 point
 - bullets over sentences
 - graphics over tables
 - reduce the white space

***** Ideas for the poster
 HD project
 - Log fold change, 
 - Up and down relative the the HDpos data.
 - Heatmap of 2 hd pos of with the gtex data
 - Describe the results.
 - plotting beta coefficients between recount2
 - Do a compare and contrast between hdpos and gtex
 - and HD and control and BA9
 - we do see some concordance between asymptomatic individuals and
 - looking at the outline and for each point can we make a plot to describe a result
 - only valid data




* Org Notes

S-<TAB>'     (`org-global-cycle')
`C-c C-k'     (`outline-show-branches')
`C-c C-u'     (`outline-up-heading')
     Backward to higher level heading.  

`M-<left>'     (`org-do-promote')
     Promote current heading by one level.  

`M-<right>'     (`org-do-demote')
     Demote current heading by one level.  

`M-S-<left>'     (`org-promote-subtree')
     Promote the current subtree by one level.  

`M-S-<right>'     (`org-demote-subtree')
     Demote the current subtree by one level.  

`M-h'     (`org-mark-element')
     Mark the element at point.  Hitting repeatedly will mark
     subsequent elements of the one just marked.  E.g., hitting <M-h>
     on a paragraph will mark it, hitting <M-h> immediately again will
     mark the next one.  

`C-c ^'     (`org-sort')
     Sort same-level entries.  When there is an active region, all
     entries in the region will be sorted.  Otherwise the children of
     the current headline are sorted.  The command prompts for the
     sorting method, which can be alphabetically, numerically, by time
     (first timestamp with active preferred, creation time, scheduled
     time, deadline time), by priority, by TODO keyword (in the
     sequence the keywords have been defined in the setup) or by the
     value of a property.  Reverse sorting is possible as well.  You
     can also supply your own function to extract the sorting key.
     With a `C-u' prefix, sorting will be case-sensitive.  
