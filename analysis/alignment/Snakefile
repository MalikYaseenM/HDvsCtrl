directory =/usr3/graduate/crespodi/Huntington/presymptomatic_hd_mrnaseq/samples

rule all:
    input:
        "report.html"
    
rule fastqc:
    input:
        "{directory}/{sample}.fastq.gz"
    output:
        "{directory}/{sample}.fastqc.zip"
        "{directory}/{sample}.fastqc.html"
    shell:
        "fastqc {input} - > {output}"


rule trimmomatic:
    input:
        "{directory}/{sample}.fastq.gz"
    output:
        "H_0014_BA9_trim.{}P_fastq.zip"
        "H_0014_BA9_trim.R{replicate}UP_fastq.zip", replicate
    shell:
        "trimmomatic PE -phred33 {input} {output} ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36"

rule STAR:
    input:
        fa="data/genome.fa",

    output:
        "calls/all.vcf"
    shell:
        "samtools mpileup -g -f {input.fa} {input.bam} | "
        "bcftools call -mv - > {output}"
        
rule multiqc:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"

rule report:
    input:
        "calls/all.vcf"
    output:
        "report.html"
    run:
        from snakemake.utils import report
        with open(input[0]) as vcf:
            n_calls = sum(1 for l in vcf if not l.startswith("#"))

        report("""
        An example variant calling workflow
        ===================================

        Reads were mapped to the Yeast
        reference genome and variants were called jointly with
        SAMtools/BCFtools.

        This resulted in {n_calls} variants (see Table T1_).
        """, output[0], T1=input[0])
