# Snakefile

# Usage
## Dry run to check if snakefile works
# snakemake --nolock -np --cluster "qsub -P mlhd -cwd -pe omp {threads}" --jobs 50
## Actual run
# snakemake --nolock --cluster "qsub -P mlhd -cwd -pe omp {threads}" --snakefile new_snake.snake -np  --jobs 10

design_info = "sample_info_design.csv"
filter_rows = "all_salmon_filter.csv"
norm = "all_salmon_norm.csv"
firth = "all_salmon_firth.csv"

rule all:
  input:
    design_info,
    filter_rows,
    norm,
    firth

# Outputs ordered sample info with subject type and age
rule design_info:
  input:"design.py"
  output:"sample_info_design.csv"
  shell:
    "python {input}"

# filter rows with means less than 5 (deletes if both control means and hd means <5)
rule filter_rows:
  input:"filter_new.py"
  output:"all_salmon_filter.csv"
  shell:
    "python {input}"

rule norm:
  input:"all_salmon_filter.csv"
  output:"all_salmon_norm.csv"
  shell:
    """detk-norm deseq2 {input} -o {output}"""

rule firth:
  input:
    counts = "all_salmon_norm.csv",
    info= "sample_info_design.csv"
  params:
    design="Subject.subject_type ~ Subject.death"
  output:"all_salmon_firth.csv"
  shell:
    """detk-de firth "{params.design}" {input.counts} {input.info} -o {output}"""
